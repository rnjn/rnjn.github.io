<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>üè°</title>
    <link>https://rnjn.in/</link>
    <description>Recent content on üè°</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 10 Apr 2023 12:14:42 +0530</lastBuildDate>
    <atom:link href="https://rnjn.in/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Risks of Cross Functional Team Structure</title>
      <link>https://rnjn.in/articles/risks-of-cross-functional-team-structure/</link>
      <pubDate>Mon, 10 Apr 2023 12:14:42 +0530</pubDate>
      <guid>https://rnjn.in/articles/risks-of-cross-functional-team-structure/</guid>
      <description>&lt;p&gt;A PoD structure enables cross functional teams, that is, teams that comprise of different specialisations like engineer, product manager, data scientist etc to work independently and execute on a business goal without dependencies on other teams. This type of structure increases the execution speed but is not without risks. Some of these that I have encountered are -&lt;/p&gt;&#xA;&lt;h3 id=&#34;division-of-work&#34;&gt;Division of work&lt;/h3&gt;&#xA;&lt;p&gt;The key to executing fast is independence in decision-making for the area of work, and not having to wait on other teams to complete a team&amp;rsquo;s work. So the biggest risk to succeeding with this kind of a team structure is that dividing up work that makes teams step on each others&amp;rsquo; toes and have dependencies on other teams to complete their goals. For a small company, this isn&amp;rsquo;t really hard to do, but for larger groups, you have to work hard to maintain independence. A mistake here renders the whole structure useless.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How do you (technically) find if you are overstaffed or understaffed? </title>
      <link>https://rnjn.in/articles/how-to-find-if-you-are-overstaffed-or-understaffed/</link>
      <pubDate>Mon, 21 Nov 2022 14:58:44 +0530</pubDate>
      <guid>https://rnjn.in/articles/how-to-find-if-you-are-overstaffed-or-understaffed/</guid>
      <description>&lt;p&gt;Staffing is relative to expectations. In the growth mood, you may want to build a lot of features and stretch, you may feel understaffed. If you are in the mood for conservation, you would want to maximise on efforts that make you money in the next 3-6 months period, so a lot of work being done may feel redundant and you feel you are overstaffed. Since this is a complex problem, we need to look at the levers.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Product Engineering TODOs for Startup Leaders</title>
      <link>https://rnjn.in/articles/product-engineering-todos-for-series-a-leaders/</link>
      <pubDate>Sun, 09 Oct 2022 23:15:16 +0530</pubDate>
      <guid>https://rnjn.in/articles/product-engineering-todos-for-series-a-leaders/</guid>
      <description>&lt;p&gt;&lt;em&gt;Oct 7th, 2022&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Series A funds are generally used to grow business, often to scale as a startup finds a product market fit (PMF). Often times, startups slow down and fail 3-4 years after this stage because of decisions made during this stage, especially when it comes to product engineering. Here are some things I think  founders and engineering leaders should care about, and set straight at this stage if they haven&amp;rsquo;t started already. The cost of fixing things grows with time, akin to &lt;a href=&#34;../../glossary/boehms-law&#34;&gt;&lt;em&gt;Boehm&amp;rsquo;s law&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Ringelmann Effect</title>
      <link>https://rnjn.in/articles/the-ringelmann-effect/</link>
      <pubDate>Fri, 23 Sep 2022 09:09:50 +0530</pubDate>
      <guid>https://rnjn.in/articles/the-ringelmann-effect/</guid>
      <description>&lt;p&gt;&lt;em&gt;Sep 23th, 2022&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Lately I have been reading a bit about group dynamics, and I came across something very obvious yet not talked about in simple terms - the effect of group size on individual productivity. Back in 1913, a French agricultural engineer Max Ringelmann discovered what we now know as the Ringelmann Effect - &lt;strong&gt;the tendency for individual members of a group to become increasingly less productive as the size of their group increases&lt;/strong&gt;. Basically, as the size of a team grows, more and more people slack and loaf about at their job.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Learnings from implementing OKRs</title>
      <link>https://rnjn.in/articles/learnings-about-okrs/</link>
      <pubDate>Tue, 13 Oct 2020 13:55:25 +0530</pubDate>
      <guid>https://rnjn.in/articles/learnings-about-okrs/</guid>
      <description>&lt;p&gt;OKRs are theoretically quite good for planning and communicating organisational goals and checking progress. The ideas are very simple and draw on empirical wisdom from successful companies like intel and google, thus in absence of a pre-existing system and for new companies its very easy to start using the methodology. OKRs also resonate well with teams that have driven progress iteratively. However, there&amp;rsquo;s a distinct lack of literature around failures and learnings to get into a good rhythm of planning and execution using OKRs, the available literature does a good job of selling. I would like to try to bridge this gap here, in this live document. This isn&amp;rsquo;t a primer or an introduction, so it is best if you read a decent text like Doerr&amp;rsquo;s, and then read this as a supplement.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting Back to Work Post Paternity Leave</title>
      <link>https://rnjn.in/articles/getting-back-to-work-post-paternity-leave/</link>
      <pubDate>Mon, 06 Jul 2020 00:13:28 +0530</pubDate>
      <guid>https://rnjn.in/articles/getting-back-to-work-post-paternity-leave/</guid>
      <description>&lt;p&gt;&lt;em&gt;Jul 6th, 2020&lt;/em&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;A good friend became a father recently, and wanted to get some free advice about what to expect when he got back to work.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Hey,&lt;/p&gt;&#xA;&lt;p&gt;If you&amp;rsquo;re reading this because you are getting back to work after your paternity leave, congratulations mate, well done! However, I do not envy you at all, practically speaking. Your life has changed dramatically in the last 2-3 months, you are barely keeping your eyes open, and hoping people around stop advising you on everything and also the opposite. And, I hope, you are also a bit anxious and worried about how best you can support your spouse through this time - as men, we go through nothing compared. These are difficult times, no doubt.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Boehm&#39;s Law</title>
      <link>https://rnjn.in/glossary/boehms-law/</link>
      <pubDate>Thu, 02 Jul 2020 15:35:33 +0530</pubDate>
      <guid>https://rnjn.in/glossary/boehms-law/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Barry_Boehm&#34;&gt;Barry Boehm&lt;/a&gt; was a visionary and his research and conclusions laid the foundation of methods (for eg. XP) to build software efficiently. One of his many seminal works is the law that he proved (with data) -&#xA;&lt;strong&gt;The cost of finding and fixing a defect grows exponentially with time&lt;/strong&gt;&#xA;&lt;img src=&#34;../boehms-law.png&#34; alt=&#34;Boehm&amp;rsquo;s Law&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Some of the many practices that engineers follow today address the effects of the law -&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Pair programming&lt;/li&gt;&#xA;&lt;li&gt;Continous integration and continuous delivery&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://rnjn.in/articles/why-test-automation-is-backbone-of-cd/&#34;&gt;Automated functional tests&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>If It Hurts, Do It More Often</title>
      <link>https://rnjn.in/glossary/if-it-hurts-do-it-more-often/</link>
      <pubDate>Thu, 02 Jul 2020 08:36:09 +0530</pubDate>
      <guid>https://rnjn.in/glossary/if-it-hurts-do-it-more-often/</guid>
      <description>&lt;p&gt;Oft noted tenet in the world of programming, this principal is the basis of continuous integration and many more things (I tried to dig a bit into the origins, but didn&amp;rsquo;t find much success).&lt;/p&gt;&#xA;&lt;p&gt;Remember, &amp;ldquo;often&amp;rdquo; is used here as a relative measure of time, and could be replaced by a unit which makes sense -&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;test integrations on every change (&lt;em&gt;Integrations are hard&lt;/em&gt;)&lt;/li&gt;&#xA;&lt;li&gt;standup for 10 minutes everyday instead of an hour at the end of week (&lt;em&gt;Alignments are hard&lt;/em&gt;)&lt;/li&gt;&#xA;&lt;li&gt;run performance reviews monthly (&lt;em&gt;Perf reviews are hard&lt;/em&gt;)&lt;/li&gt;&#xA;&lt;li&gt;run OKR cadences monthly (&lt;em&gt;Distributed work is hard&lt;/em&gt;)&lt;/li&gt;&#xA;&lt;li&gt;break all your user stories to 1 pointers (&lt;em&gt;Estimating big stories is hard&lt;/em&gt;)&lt;/li&gt;&#xA;&lt;li&gt;pair program (&lt;em&gt;Code reviews are hard&lt;/em&gt;)&lt;/li&gt;&#xA;&lt;li&gt;build and test changes incrementally (&lt;a href=&#34;../boehms-law&#34;&gt;&lt;em&gt;Boehm&amp;rsquo;s law&lt;/em&gt;&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;As you can see, the value of following this tenet is high when complexity grows exponentially with time.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Iterative Improvement</title>
      <link>https://rnjn.in/glossary/iterative-improvement/</link>
      <pubDate>Wed, 01 Jul 2020 09:39:00 +0530</pubDate>
      <guid>https://rnjn.in/glossary/iterative-improvement/</guid>
      <description>&lt;p&gt;Iterative improvement is the basis of most modern project management principles (agile/xp/scrum..). It follows the &lt;a href=&#34;https://en.wikipedia.org/wiki/Scientific_method#Process&#34;&gt;Scientific Method&lt;/a&gt;. The steps are simple and intuitive, indeed they follow how we learn most things - by trying and failing and trying again. So in case you have a system that you want to improve -&#xA;&lt;img src=&#34;../iterative-improvement.png&#34; alt=&#34;Iterative Improvement&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Experiment&lt;/strong&gt; - formalise and execute the change you expect to make in the system&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Observe&lt;/strong&gt; - Observe the effect(s) of said change&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Course Correct&lt;/strong&gt; - From these observations, find out if changes in the experiments are needed, and then make them.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;and repeat, till you are satisfied with the desired improvement. This is it, this is the basis of a virtuous improvement cycle. To improve any system - software or process or cooking, just follow the 3 step plan.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Goal based performance and progress tracking</title>
      <link>https://rnjn.in/articles/set-specific-goals-and-iterate/</link>
      <pubDate>Sat, 27 Jun 2020 17:53:36 +0530</pubDate>
      <guid>https://rnjn.in/articles/set-specific-goals-and-iterate/</guid>
      <description>&lt;p&gt;&lt;em&gt;Jul 5th, 2020&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;In general, employee performance cycles are considered a painful experience for most participants. There are many reasons for this -&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;No expectation setting&lt;/li&gt;&#xA;&lt;li&gt;Generic and high level expectation setting&lt;/li&gt;&#xA;&lt;li&gt;Role definitions and Job descriptions do not encompass everything that an employee does&lt;/li&gt;&#xA;&lt;li&gt;Frequent shifting in expectations&lt;/li&gt;&#xA;&lt;li&gt;Long performance review cycles&lt;/li&gt;&#xA;&lt;li&gt;Lack of accountability of evaluators&lt;/li&gt;&#xA;&lt;li&gt;Lack of documented progress through the cycle&lt;/li&gt;&#xA;&lt;li&gt;Quality of reviewers is not monitored&lt;/li&gt;&#xA;&lt;li&gt;Batching of reviews causes crammed up schedules and reduces individual attention&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;All these (and more) add up to employees getting surprised during reviews, and builds frustration overall even in organisations that take pride in how they treat their employees. A lot of work has gone into this field, and yet, there&amp;rsquo;s consensus on only one actionable measure - that reactive performance and progress measurement is not a healthy option. There are various methods that would allow you to get better on this front, I would share  one such approach below.&lt;/p&gt;</description>
    </item>
    <item>
      <title>About</title>
      <link>https://rnjn.in/about/</link>
      <pubDate>Tue, 23 Jun 2020 23:50:02 +0530</pubDate>
      <guid>https://rnjn.in/about/</guid>
      <description>&lt;p&gt;Hullo there!&lt;/p&gt;&#xA;&lt;p&gt;My name is Ranjan, you may find my work bio &lt;a href=&#34;https://www.linkedin.com/in/rnjns/&#34;&gt;here&lt;/a&gt;. I am currently on a break from active employment and spending time with kids, reading, roaming around and generally not doing much of anything. During this break, I am helping and coaching some founders and engineering leaders who have found pmf and are aspiring to scale their engineering teams.&lt;/p&gt;&#xA;&lt;h3 id=&#34;more-about-me&#34;&gt;More about me&lt;/h3&gt;&#xA;&lt;p&gt;Till recently, I managed engineering for an Indian edTech company called Vedantu. Before that, I worked at an Indonesian company called gojek (now GoTo), building a much loved app that tries to remove life&amp;rsquo;s daily frictions. Chances are, if you have been to Indonesia in the last 4-5 years, I have caused some distress to you because of one of the many mistakes I&amp;rsquo;ve made. I have been a software developer since 2002, and prior to gojek, I worked for about a decade at ThoughtWorks, a software consultancy firm and home to some of my favourite people.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Books that help understanding and building productive teams</title>
      <link>https://rnjn.in/articles/books-that-help-in-team-building/</link>
      <pubDate>Mon, 27 Apr 2020 13:34:14 +0530</pubDate>
      <guid>https://rnjn.in/articles/books-that-help-in-team-building/</guid>
      <description>&lt;p&gt;&lt;em&gt;Apr 27th, 2020&lt;/em&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;A very dear friend asked me the other day - what is the best book you‚Äôve read about building teams? I thought it best to take time to answer this. I am not an expert at either, reading books or building teams.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;br/&gt;In the last 4-5 years, I have worked and managed teams that have been very productive and have been together even now. None of this is because of a book, or because of me. And no one book alone has helped me understand or improve my skills, but many. I list some below. &lt;br/&gt;&lt;left-third-panel class=&#34;section&#34;&gt;&lt;br/&gt;    &lt;div class=&#34;container fl w-100 dt dt--fixed w-100&#34;&gt;&lt;br/&gt;        &lt;div class=&#34;w-25 tl dtc pr2&#34; &gt;&lt;br/&gt;            &lt;img src=&#34;https://books.google.co.in/books/content?id=1HlPPgAACAAJ&amp;amp;printsec=frontcover&amp;amp;img=1&amp;amp;zoom=1&#34; alt=&#34;Principles of Product Development Flow&#34;&gt;&lt;br/&gt;        &lt;/div&gt;&lt;br/&gt;        &lt;div class=&#34;w-75 tl v-mid dtc&#34;&gt;&lt;br/&gt;            Reinertsen‚Äôs &lt;a href=&#34;https://www.goodreads.com/book/show/6278270-the-principles-of-product-development-flow&#34;&gt;Principles of Product Development Flow&lt;/a&gt; helps you understand how product development really works, and what to look out for. It might sound orthogonal to ‚Äúbuilding teams‚Äù, but teams exist to build products, and good teams must learn to optimise the flow.&lt;br/&gt;        &lt;/div&gt;&lt;br/&gt;    &lt;/div&gt;&lt;br/&gt;&lt;/left-third-panel&gt;&lt;br/&gt;&lt;left-third-panel class=&#34;section&#34;&gt;&lt;br/&gt;    &lt;div class=&#34;container fl w-100 dt dt--fixed w-100&#34;&gt;&lt;br/&gt;        &lt;div class=&#34;w-25 tl dtc pr2&#34; &gt;&lt;br/&gt;            &lt;img src=&#34;https://books.google.co.in/books/content?id=b0XHUvs_iBkC&amp;amp;printsec=frontcover&amp;amp;img=1&amp;amp;zoom=1&#34; alt=&#34;The Fifth Discipline&#34;&gt;&lt;br/&gt;        &lt;/div&gt;&lt;br/&gt;        &lt;div class=&#34;w-75 tl v-mid dtc&#34;&gt;&lt;br/&gt;            Senge‚Äôs &lt;a href=&#34;https://www.goodreads.com/book/show/255127.The_Fifth_Discipline&#34;&gt;The Fifth Discipline&lt;/a&gt; is another book that helps thinking in systems&lt;br/&gt;        &lt;/div&gt;&lt;br/&gt;    &lt;/div&gt;&lt;br/&gt;&lt;/left-third-panel&gt;&lt;br/&gt;&lt;left-third-panel class=&#34;section&#34;&gt;&lt;br/&gt;    &lt;div class=&#34;container fl w-100 dt dt--fixed w-100&#34;&gt;&lt;br/&gt;        &lt;div class=&#34;w-25 tl dtc pr2&#34; &gt;&lt;br/&gt;            &lt;img src=&#34;https://books.google.co.in/books/content?id=ygF9DAAAQBAJ&amp;amp;printsec=frontcover&amp;amp;img=1&amp;amp;zoom=1&#34; alt=&#34;Fieldbook&#34;&gt;&lt;br/&gt;        &lt;/div&gt;&lt;br/&gt;        &lt;div class=&#34;w-75 tl v-mid dtc&#34;&gt;&lt;br/&gt;            and the accompanying &lt;a href=&#34;https://www.goodreads.com/book/show/846249.The_Fifth_Discipline_Fieldbook&#34;&gt;Fieldbook&lt;/a&gt; is a great guide to apply theory to practice&lt;br/&gt;        &lt;/div&gt;&lt;br/&gt;    &lt;/div&gt;&lt;br/&gt;&lt;/left-third-panel&gt;&lt;br/&gt;&lt;left-third-panel class=&#34;section&#34;&gt;&lt;br/&gt;    &lt;div class=&#34;container fl w-100 dt dt--fixed w-100&#34;&gt;&lt;br/&gt;        &lt;div class=&#34;w-25 tl dtc pr2&#34; &gt;&lt;br/&gt;            &lt;img src=&#34;https://books.google.co.in/books/content?id=oK42DwAAQBAJ&amp;amp;printsec=frontcover&amp;amp;img=1&amp;amp;zoom=1&#34; alt=&#34;Skin in the Game&#34;&gt;&lt;br/&gt;        &lt;/div&gt;&lt;br/&gt;        &lt;div class=&#34;w-75 tl v-mid dtc&#34;&gt;&lt;br/&gt;            Taleb‚Äôs &lt;a href=&#34;https://www.goodreads.com/book/show/36064445-skin-in-the-game&#34;&gt;Skin in the Game&lt;/a&gt; helps understand people behaviours, risk / reward models, pushes one to be invested in the team and the results, commitment not faith.&lt;br/&gt;        &lt;/div&gt;&lt;br/&gt;    &lt;/div&gt;&lt;br/&gt;&lt;/left-third-panel&gt;&lt;br/&gt;&lt;left-third-panel class=&#34;section&#34;&gt;&lt;br/&gt;    &lt;div class=&#34;container fl w-100 dt dt--fixed w-100&#34;&gt;&lt;br/&gt;        &lt;div class=&#34;w-25 tl dtc pr2&#34; &gt;&lt;br/&gt;            &lt;img src=&#34;https://books.google.co.in/books/content?id=7Z1BDwAAQBAJ&amp;amp;printsec=frontcover&amp;amp;img=1&amp;amp;zoom=1&#34; alt=&#34;Powerful&#34;&gt;&lt;br/&gt;        &lt;/div&gt;&lt;br/&gt;        &lt;div class=&#34;w-75 tl v-mid dtc&#34;&gt;&lt;br/&gt;            On treating people right (as adults, naturally), I got a lot of help from McCord‚Äôs &lt;a href=&#34;https://www.goodreads.com/book/show/36417234-powerful&#34;&gt;Powerful&lt;/a&gt;, it‚Äôs one of those special books which either helped me learn something on every page or I nodded vigorously on the rest of them.&lt;br/&gt;        &lt;/div&gt;&lt;br/&gt;    &lt;/div&gt;&lt;br/&gt;&lt;/left-third-panel&gt;&lt;br/&gt;&lt;left-third-panel class=&#34;section&#34;&gt;&lt;br/&gt;    &lt;div class=&#34;container fl w-100 dt dt--fixed w-100&#34;&gt;&lt;br/&gt;        &lt;div class=&#34;w-25 tl dtc pr2&#34; &gt;&lt;br/&gt;            &lt;img src=&#34;https://books.google.co.in/books/content?id=D5HxtvaRzdwC&amp;amp;printsec=frontcover&amp;amp;img=1&amp;amp;zoom=1&#34; alt=&#34;Difficult Conversations&#34;&gt;&lt;br/&gt;        &lt;/div&gt;&lt;br/&gt;        &lt;div class=&#34;w-75 tl v-mid dtc&#34;&gt;&lt;br/&gt;            &lt;a href=&#34;https://www.goodreads.com/book/show/774088.Difficult_Conversations&#34;&gt;Difficult Conversations&lt;/a&gt; by Stone et al, a very good help on the topic, and I keep going back to it trying to shed my judgemental self all the while. This stuff should be taught in school.&lt;br/&gt;        &lt;/div&gt;&lt;br/&gt;    &lt;/div&gt;&lt;br/&gt;&lt;/left-third-panel&gt;&lt;br/&gt;&lt;left-third-panel class=&#34;section&#34;&gt;&lt;br/&gt;    &lt;div class=&#34;container fl w-100 dt dt--fixed w-100&#34;&gt;&lt;br/&gt;        &lt;div class=&#34;w-25 tl dtc pr2&#34; &gt;&lt;br/&gt;            &lt;img src=&#34;https://books.google.co.in/books/content?id=-DNcBAAAQBAJ&amp;amp;printsec=frontcover&amp;amp;img=1&amp;amp;zoom=1&#34; alt=&#34;eXtreme Programming Explained&#34;&gt;&lt;br/&gt;        &lt;/div&gt;&lt;br/&gt;        &lt;div class=&#34;w-75 tl v-mid dtc&#34;&gt;&lt;br/&gt;            On to some software books, Beck‚Äôs &lt;a href=&#34;https://www.goodreads.com/book/show/67833.Extreme_Programming_Explained&#34;&gt;eXtreme Programming Explained&lt;/a&gt; has you covered on process, and meta process, don‚Äôt need much else even at scale&lt;br/&gt;        &lt;/div&gt;&lt;br/&gt;    &lt;/div&gt;&lt;br/&gt;&lt;/left-third-panel&gt;&lt;br/&gt;&lt;left-third-panel class=&#34;section&#34;&gt;&lt;br/&gt;    &lt;div class=&#34;container fl w-100 dt dt--fixed w-100&#34;&gt;&lt;br/&gt;        &lt;div class=&#34;w-25 tl dtc pr2&#34; &gt;&lt;br/&gt;            &lt;img src=&#34;https://books.google.co.in/books/content?id=Ug9QDwAAQBAJ&amp;amp;printsec=frontcover&amp;amp;img=1&amp;amp;zoom=1&#34; alt=&#34;Release It!&#34;&gt;&lt;br/&gt;        &lt;/div&gt;&lt;br/&gt;        &lt;div class=&#34;w-75 tl v-mid dtc&#34;&gt;&lt;br/&gt;            Nygard‚Äôs &lt;a href=&#34;https://www.goodreads.com/book/show/1069827.Release_It_&#34;&gt;Release It!&lt;/a&gt; is a massive help for product teams to be ready and design for difficult situations. It‚Äôs almost like having a Principal Engineer in the team who helps you and your team as a guide.&lt;br/&gt;        &lt;/div&gt;&lt;br/&gt;    &lt;/div&gt;&lt;br/&gt;&lt;/left-third-panel&gt;&lt;br/&gt;&lt;left-third-panel class=&#34;section&#34;&gt;&lt;br/&gt;    &lt;div class=&#34;container fl w-100 dt dt--fixed w-100&#34;&gt;&lt;br/&gt;        &lt;div class=&#34;w-25 tl dtc pr2&#34; &gt;&lt;br/&gt;            &lt;img src=&#34;https://books.google.co.in/books/content?id=mp16BDRDaYQC&amp;amp;printsec=frontcover&amp;amp;img=1&amp;amp;zoom=1&#34; alt=&#34;On Writing Well&#34;&gt;&lt;br/&gt;        &lt;/div&gt;&lt;br/&gt;        &lt;div class=&#34;w-75 tl v-mid dtc&#34;&gt;&lt;br/&gt;            Communication is very important for teams, and getting better at writing is always advisable. Zinsser‚Äôs &lt;a href=&#34;https://www.goodreads.com/book/show/53343.On_Writing_Well&#34;&gt;On Writing Well&lt;/a&gt; helps keep it pithy and warm. It&amp;rsquo;s a great teacher, this book.&lt;br/&gt;        &lt;/div&gt;&lt;br/&gt;    &lt;/div&gt;&lt;br/&gt;&lt;/left-third-panel&gt;&lt;br/&gt;&lt;left-third-panel class=&#34;section&#34;&gt;&lt;br/&gt;    &lt;div class=&#34;container fl w-100 dt dt--fixed w-100&#34;&gt;&lt;br/&gt;        &lt;div class=&#34;w-25 tl dtc pr2&#34; &gt;&lt;br/&gt;            &lt;img src=&#34;https://books.google.co.in/books/content?id=aFapBAAAQBAJ&amp;amp;printsec=frontcover&amp;amp;img=1&amp;amp;zoom=1&#34; alt=&#34;The Innovators&#34;&gt;&lt;br/&gt;        &lt;/div&gt;&lt;br/&gt;        &lt;div class=&#34;w-75 tl v-mid dtc&#34;&gt;&lt;br/&gt;            Walter Isaacson‚Äôs two books that helped me understand craftsmen better, both rather less famous, &lt;a href=&#34;https://www.goodreads.com/book/show/21856367-the-innovators&#34;&gt;The Innovators&lt;/a&gt;&lt;br/&gt;        &lt;/div&gt;&lt;br/&gt;    &lt;/div&gt;&lt;br/&gt;&lt;/left-third-panel&gt;&lt;br/&gt;&lt;left-third-panel class=&#34;section&#34;&gt;&lt;br/&gt;    &lt;div class=&#34;container fl w-100 dt dt--fixed w-100&#34;&gt;&lt;br/&gt;        &lt;div class=&#34;w-25 tl dtc pr2&#34; &gt;&lt;br/&gt;            &lt;img src=&#34;https://books.google.co.in/books/content?id=OBGEDgAAQBAJ&amp;amp;printsec=frontcover&amp;amp;img=1&amp;amp;zoom=1&#34; alt=&#34;Leonardo Da Vinci&#34;&gt;&lt;br/&gt;        &lt;/div&gt;&lt;br/&gt;        &lt;div class=&#34;w-75 tl v-mid dtc&#34;&gt;&lt;br/&gt;            and &lt;a href=&#34;https://www.goodreads.com/book/show/34684622-leonardo-da-vinci&#34;&gt;Leonardo Da Vinci&lt;/a&gt;&lt;br/&gt;        &lt;/div&gt;&lt;br/&gt;    &lt;/div&gt;&lt;br/&gt;&lt;/left-third-panel&gt;&lt;br/&gt;&lt;left-third-panel class=&#34;section&#34;&gt;&lt;br/&gt;    &lt;div class=&#34;container fl w-100 dt dt--fixed w-100&#34;&gt;&lt;br/&gt;        &lt;div class=&#34;w-25 tl dtc pr2&#34; &gt;&lt;br/&gt;            &lt;img src=&#34;https://books.google.co.in/books/content?id=qNNmDwAAQBAJ&amp;amp;printsec=frontcover&amp;amp;img=1&amp;amp;zoom=1&#34; alt=&#34;Principles&#34;&gt;&lt;br/&gt;        &lt;/div&gt;&lt;br/&gt;        &lt;div class=&#34;w-75 tl v-mid dtc&#34;&gt;&lt;br/&gt;            Dalio‚Äôs &lt;a href=&#34;https://www.goodreads.com/book/show/34536488-principles&#34;&gt;Principles&lt;/a&gt; is a great book as well, with veritable advice and it&amp;rsquo;s just so direct and hard hitting and totally focused on getting stuff done. Period.&lt;br/&gt;        &lt;/div&gt;&lt;br/&gt;    &lt;/div&gt;&lt;br/&gt;&lt;/left-third-panel&gt;&lt;br/&gt;&lt;br/&gt;&lt;left-third-panel class=&#34;section&#34;&gt;&lt;br/&gt;    &lt;div class=&#34;container fl w-100 dt dt--fixed w-100&#34;&gt;&lt;br/&gt;        &lt;div class=&#34;w-25 tl dtc pr2&#34; &gt;&lt;br/&gt;            &lt;br/&gt;        &lt;/div&gt;&lt;br/&gt;        &lt;div class=&#34;w-75 tl v-mid dtc&#34;&gt;&lt;br/&gt;            &lt;br/&gt;        &lt;/div&gt;&lt;br/&gt;    &lt;/div&gt;&lt;br/&gt;&lt;/left-third-panel&gt;&lt;br/&gt;&lt;br/&gt;That is a long list. There are many others, some I forget, building teams is a lot about knowing people, and I must acknowledge many others have helped me grow up on that, from Wodehouse to Pirsig, Guha, Bradbury, le Guin, Banks, Harari, Rosling, Dickens and Nagarkar, Tolkein to Goodkind to Jemisin, from Parsai and Joshi and Manto and Sawant; Moore and Gaiman and Vaughan and Pran, Fowler and Hohpe and Evans and Cockburn, Polya and Rushdie; I am not an expert at this or that, but whatever I know, I know because I‚Äôve met some great people and read some books written by wonderful and helpful souls. &lt;br/&gt;&lt;br/&gt;These days, I am unable to find time to read books, but I hope some people do, it&#39;s a good time to read and skill up when you are stuck indoors.&lt;br/&gt;&lt;br/&gt;</description>
    </item>
    <item>
      <title>Scaling</title>
      <link>https://rnjn.in/talks/scaling/</link>
      <pubDate>Mon, 24 Jun 2019 23:22:59 +0530</pubDate>
      <guid>https://rnjn.in/talks/scaling/</guid>
      <description>&lt;p&gt;&lt;em&gt;June 2019&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;At an event organised by ThoughtWorks I presented on &lt;a href=&#34;https://docs.google.com/presentation/d/12PLmWgD1M_alg8ACSc4R9s2wSMAVaAgTukjFaXCtlfo/edit?usp=sharing&#34;&gt;scaling - tech, teams and processes&lt;/a&gt;. The slides by themselves may not paint a complete picture, if you have any questions, do drop me an email, and I will try to get back to you.&lt;/p&gt;</description>
    </item>
    <item>
      <title>On Postels Law and Managing Change</title>
      <link>https://rnjn.in/articles/on-postels-law-and-managing-change/</link>
      <pubDate>Thu, 30 Jul 2015 17:58:57 +0530</pubDate>
      <guid>https://rnjn.in/articles/on-postels-law-and-managing-change/</guid>
      <description>&lt;p&gt;Postel&amp;rsquo;s law ~1981&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;,&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&amp;ldquo;Be conservative in what you do, be liberal in what you accept from others.&amp;rdquo; (RFC 793)&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;A webservice accepting a message with a defined schema (xml/json/other) may choose to do one of these when it encounters messages with extra nodes/properties -&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;be conservative and discard&lt;/li&gt;&#xA;&lt;li&gt;be liberal and accept&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Of the two, there are more proponents for the latter than the former. There are many reasons thrown at the conservatives, one of them that has practical implications is change in schema. Before we go further lets state the obvious - if there is never ever going to be a change in the schema of a message, being conservative is just the same as being liberal. Except that the &amp;ldquo;never ever&amp;rdquo; &lt;strong&gt;never&lt;/strong&gt; really happens, there&amp;rsquo;s always some change in schema. The choice of being liberal or conservative mandates thinking about how you deal with change in schema, and that&amp;rsquo;s a good thing.&lt;/p&gt;</description>
    </item>
    <item>
      <title>On Postels law and managing change</title>
      <link>https://rnjn.in/test-page/</link>
      <pubDate>Thu, 30 Jul 2015 13:49:52 +0530</pubDate>
      <guid>https://rnjn.in/test-page/</guid>
      <description>&lt;p&gt;Postel&amp;rsquo;s law ~1981&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;,&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&amp;ldquo;Be conservative in what you do, be liberal in what you accept from others.&amp;rdquo; (RFC 793)&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;A webservice accepting a message with a defined schema (xml/json/other) may choose to do one of these when it encounters messages with extra nodes/properties -&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;be conservative and discard&lt;/li&gt;&#xA;&lt;li&gt;be liberal and accept&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Of the two, there are more proponents for the latter than the former. There are many reasons thrown at the conservatives, one of them that has practical implications is change in schema. Before we go further lets state the obvious - if there is never ever going to be a change in the schema of a message, being conservative is just the same as being liberal. Except that the &amp;ldquo;never ever&amp;rdquo; &lt;strong&gt;never&lt;/strong&gt; really happens, there&amp;rsquo;s always some change in schema. The choice of being liberal or conservative mandates thinking about how you deal with change in schema, and that&amp;rsquo;s a good thing.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pretty Python List Comprehensions</title>
      <link>https://rnjn.in/articles/pretty-python-list-comprehensions/</link>
      <pubDate>Mon, 12 May 2014 17:52:27 +0530</pubDate>
      <guid>https://rnjn.in/articles/pretty-python-list-comprehensions/</guid>
      <description>&lt;p&gt;&lt;em&gt;May 12th, 2014&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Python list comprehensions are by far the simplest and most readable loop expressions that I have worked with. Here‚Äôs an example where I have a list of lists of lists (corpus ‚Äì&amp;gt; documents ‚Äì&amp;gt; sentences) where I need to remove some items (called stop_words here) from the sentences.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;corpus &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [[[word&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; word &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; sentence &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; word &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;_stop_words]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; sentence &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; document]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; document &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; corpus]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                                      &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Notice the array brackets added after each for expression so the program retains the same structure.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Introducing Automation to Large Team</title>
      <link>https://rnjn.in/articles/introducing-automation-to-large-team/</link>
      <pubDate>Mon, 24 Oct 2011 17:43:31 +0530</pubDate>
      <guid>https://rnjn.in/articles/introducing-automation-to-large-team/</guid>
      <description>&lt;p&gt;&lt;em&gt;Oct 24th, 2011&lt;/em&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;A reader on my &lt;a href=&#34;http://www.infoq.com/articles/test-automation-continuous-delivery&#34;&gt;article&lt;/a&gt; at infoq asked an interesting question - introducing automation to a big project which has been worked on for some time. I plan to write more posts on this topic, have a lot of thoughts, but here‚Äôs my immediate answer -&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;A very strong actionable technique that I have seen work well is that you create a small/minimal smoke test suite for you larger app. You can decide on what comprises a suite of smoke test -&lt;/p&gt;</description>
    </item>
    <item>
      <title>Why is test automation the backbone of Continuous Delivery?</title>
      <link>https://rnjn.in/articles/why-test-automation-is-backbone-of-cd/</link>
      <pubDate>Thu, 25 Aug 2011 16:13:37 +0530</pubDate>
      <guid>https://rnjn.in/articles/why-test-automation-is-backbone-of-cd/</guid>
      <description>&lt;p&gt;&lt;em&gt;Aug 25th, 2011&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Software testing and verification needs a careful and diligent process of impersonating an end user, trying various usages and input scenarios, comparing and asserting expected behaviours. Directly, the words ‚Äúcareful and diligent‚Äù invoke the idea of letting a computer program do the job. Automating certain programmable aspects of your test suite thus can help software delivery massively. In most of the projects that I have worked on, there were aspects of testing which could be automated, and then there were some that couldn‚Äôt. Nonetheless, my teams could rely heavily on our automation suite when we had one, and spend our energies testing aspects of the application we could not cover with automated functional tests. Also, automating tests helped us immensely to meet customer demands for quick changes, and subsequently reaching a stage where every build, even ones with very small changes went out tested and verified from our stable. As Jez rightly says in his excellent text about &lt;a href=&#34;http://continuousdelivery.com/&#34;&gt;Continuous Delivery&lt;/a&gt;, automated tests ‚Äútake delivery teams beyond basic continuous integration‚Äù and on to the path of continuous delivery. In fact, I believe they are of such paramount importance, that to prepare yourself for continuous delivery, you must invest in automation. In this text, I explain why I believe so.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Who Should Write Functional Tests?</title>
      <link>https://rnjn.in/articles/who-should-write-functional-tests/</link>
      <pubDate>Mon, 03 Jan 2011 16:08:19 +0530</pubDate>
      <guid>https://rnjn.in/articles/who-should-write-functional-tests/</guid>
      <description>&lt;p&gt;&lt;em&gt;Jan 3rd, 2011&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Functional testing code is more often than not treated as a second class citizen. Delivery teams tend to ignore problems with test code over a period of time, and worry more about test results. This leads to poor code quality and bad test architecture, which in turn hurts the maintainability of a test suite. Its this negative feedback cycle that a team should be worried about. In my opinion, treating test code as responsibly as we treat functional code fixes this.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Why Teams Lose Faith in their Functional Automation suite?</title>
      <link>https://rnjn.in/articles/why-teams-lose-faith-in-functional-automation/</link>
      <pubDate>Mon, 06 Dec 2010 16:03:31 +0530</pubDate>
      <guid>https://rnjn.in/articles/why-teams-lose-faith-in-functional-automation/</guid>
      <description>&lt;p&gt;&lt;em&gt;DEC 6th, 2010&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;In my opinion, there are three main reasons why a functional automation suite loses its value (or the respect that a delivery team should pay it). This leads to a variety of problems, but I will save that for a later post.&lt;/p&gt;&#xA;&lt;p&gt;The reasons for me are -&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Non-deterministic tests&lt;/strong&gt; - run the same test again (without changing the code) and the test gives different results.&lt;/p&gt;&#xA;&lt;p&gt;This, in my opinion is the least attractive aspect, a true demotivator for a delivery team to believe in its functional test suite. One of the reasons I have seen non-deterministic failures is when the tests run on hardware that‚Äôs performance is non-deterministic, for example VMs which share hardware resources, and hence are dependent on how the other VMs on the same host are performing during the test run. Sometimes, tests are non-deterministic when they access external systems which are non-deterministic. Unless testing the robustness of the system under test, stubbing out such external dependencies have worked out well. Another reason is just bad tests, like tests which depend on the time which they are running at (unless functionally driven to), tests which have time-outs which are not well researched and more. Sometimes the tools used to drive tests are non-deterministic (we found a couple of them driving Silverlight tests) which makes it really difficult to believe in the results of the tests you write.&#xA;All non-deterministic tests can and should be fixed, but I have seen the effort to fix these being directly proportional to the amount of customer involvement/value to delivery. People also cite them as ‚Äúrandom failures‚Äù and ignore them. I believe that every developer who calls a program ‚Äúrandom‚Äù loses respect by a notch everytime they call it so.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Is Your Functional Suite Done Right?</title>
      <link>https://rnjn.in/articles/is-your-functional-suite-done-right/</link>
      <pubDate>Tue, 10 Feb 2009 15:59:41 +0530</pubDate>
      <guid>https://rnjn.in/articles/is-your-functional-suite-done-right/</guid>
      <description>&lt;p&gt;&lt;em&gt;Feb 10th, 2009&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;On the last two projects that I have worked on, both being fairly sized in terms of people (40+), I have seen enormous effort being spent on functional testing. The effort, though not completely wasted, hasn‚Äôt yielded proportional gains in terms of quality improvements and quicker feedback on a higher integration level. The following list tries to address issues and my take on fixing them.&lt;/p&gt;&#xA;&lt;h2 id=&#34;separation-of-concerns&#34;&gt;Separation of Concerns&lt;/h2&gt;&#xA;&lt;p&gt;Functional suites suffer most from a lack of clear directive on what they are written for. Adding view tests (testing windows UI/html output) which cannot be tested by your regular unit tests to your functional suite is a recipe for disaster. View tests do not belong in the function suite. Unfortunately such tests form almost half of the suite. Coupling these not only increases the run time of a suite, it also mandates that the same testing tool is used for both these sets. Think of an ASP.Net website you are developing. A view test suite can be written using the lightening fast NUnitASP toolset, because you wouldn‚Äôt need to attack cross browser compatibility issues and integration between your user interface and services, and you can write your functional suite with Selenium or your favorite browser based testing tool. Also, view tests should be a part of the tests that a pair runs before they check-in, while all functional tests might not (teams generally decide on a subset as smoke), so dividing your tests judiciously between view tests and functional tests is of utmost importance.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
